version: "3"
services:
  redis-stack:
    image: redis/redis-stack:7.2.0-v10
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-h",
          "localhost",
          "-p",
          "6379",
          "ping"
        ]
      interval: 2s
      timeout: 1m30s
      retries: 5
      start_period: 5s
    volumes:
      - redis_data:/data
    # networks:
    #   - deployment_network

  svaeva-manager:
    build:
      context: ./
      dockerfile: svaeva-manager/Dockerfile
    command: streamlit run svaeva_manager/server.py --server.port 8501
    ports:
      - "8501:8501"
    depends_on:
      - "redis-stack"
      # networks:
      #   - deployment_network

  langserve-app:
    build:
      context: ./
      dockerfile: svaeva-langserve-app/Dockerfile
    command: uvicorn app.server:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      - "redis-stack"
    # networks:
    #   - deployment_network

  handler-telegram-a:
    build:
      context: ./
      dockerfile: svaeva-handlers/telegram-a/Dockerfile
    command: poetry run python asyncio/server.py
    depends_on:
      - "redis-stack"
      - "langserve-app"
      # networks:
      # - deployment_network

  handler-telegram-b:
    build:
      context: ./
      dockerfile: svaeva-handlers/telegram-b/Dockerfile
    command: poetry run python asyncio/server.py
    depends_on:
      - "redis-stack"
      - "langserve-app"
      - "handler-telegram-a"
      # networks:
      # - deployment_network

  scheduler:
    build:
      context: ./
      dockerfile: svaeva-schedulers/Dockerfile
    command: uvicorn svaeva_schedulers.consonancia.server:app --host 0.0.0.0 --port 7999 --reload
    ports:
      - "7999:7999"
    depends_on:
      - "redis-stack"
  # networks:
  # - deployment_network

volumes:
  redis_data:
    # networks:
    #   deployment_network
